<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Jente Hidskes&#39; website</title>
    <link>https://hjdskes.nl/projects/</link>
    <description>Recent content in Projects on Jente Hidskes&#39; website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2016-2019 Jente Hidskes</copyright>
    <lastBuildDate>Mon, 08 Aug 2016 13:18:21 +0200</lastBuildDate>
    
	<atom:link href="https://hjdskes.nl/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A purpose-built Linux OS for my Raspberry Pi 3B&#43; home automation system</title>
      <link>https://hjdskes.nl/projects/rpi-linux/</link>
      <pubDate>Thu, 27 Dec 2018 16:54:01 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/rpi-linux/</guid>
      <description>For my home automation system I developed a purpose-built (minimal, embedded) Linux-based operating system.
This embedded Linux distribution is built using Buildroot. To house my configuration, I forked Buildroot on GitHub. I added a custom defconfig (configs/hjdskes_rpi3_defconfig) that holds my image&amp;rsquo;s configuration, and there is a subdirectory in board/hjdskes/rpi3/ to hold configuration files and a rootsfs overlay.
The system is very minimal and modern: on top of the Linux kernel, it installs systemd (only the required parts and logind), util-linux&amp;rsquo; agetty and login, bash, Raspberry Pi firmware, wpa_supplicant, mesa (Gallium VC4 driver, OpenGL ES and EGL), GTK+ 3, my Wayland compositor Cage, the Cantarell font and the Adwaita icon theme.</description>
    </item>
    
    <item>
      <title>Cage: the Wayland kiosk</title>
      <link>https://hjdskes.nl/projects/cage/</link>
      <pubDate>Thu, 22 Nov 2018 19:59:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/cage/</guid>
      <description>Cage is a kiosk compositor for Wayland. A kiosk is a window manager (in the X11 world) or compositor (in the Wayland world) that is designed for a user experience wherein user interaction and activities outside the scope of the running application are prevented. That is, a kiosk compositor runs a maximized application at a time and prevents the user from interacting with anything but this application.
As such, user input such as moving, resizing, minimizing and unmaximizing windows is ignored.</description>
    </item>
    
    <item>
      <title>MSc thesis: Abstract Interpretation of Program Transformations using Regular Tree Grammars</title>
      <link>https://hjdskes.nl/projects/msc/</link>
      <pubDate>Fri, 02 Nov 2018 11:00:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/msc/</guid>
      <description>I completed my MSc thesis at the Programming Languages group of the TU Delft under the supervision of Dr. S.T. Erdweg and Sven Keidel.
Program transformations translate code of an input language to code of an output language. Examples of program transformations are desugarings, optimizations and refactorings. Developers of program transformations need to ensure correctness of their programs. For example, for a desugaring we would want to know whether all sugar constructs have been removed after the transformation.</description>
    </item>
    
    <item>
      <title>Quadrupel: an embedded software project to stabilize a drone</title>
      <link>https://hjdskes.nl/projects/quadrupel/</link>
      <pubDate>Mon, 11 Dec 2017 00:47:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/quadrupel/</guid>
      <description>For the course IN4073 Embedded Real-Time Systems my project group and I had to program the software of an embedded control unit of a drone (dubbed the Quadrupel), to provide stabilization such that it can hover and fly with limited user control.
Our drone managed to take off, fly and land safely. Our response time was high enough for adequate stability, which we managed to do by:
 using a simple, custom message format on top of the COBS protocol to communicate between the base station (a PC) and the drone, sticking to a small and simple code base implementing a finite state machine, thoroughly reviewing each other&amp;rsquo;s pull requests.</description>
    </item>
    
    <item>
      <title>Network intrusion detection/prevention system: Advanced Network Security course project</title>
      <link>https://hjdskes.nl/projects/network-intrusion-detection/</link>
      <pubDate>Sun, 28 May 2017 00:47:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/network-intrusion-detection/</guid>
      <description>For the course ET4307IN Advanced Network Security I had to develop an intrusion detection/prevention system. This system does the following:
 capture live data from the NIC and save data to / read data from a pcap file. capture and parse DNS packets according to RFC1035, with (as required) a custom parser. It gracefully ignores record types added in later versions of the DNS protocol. Log ARP packets (parsed with a custom parser, as required) that have generated an error or notice via a custom configuration.</description>
    </item>
    
    <item>
      <title>License locations: proof of concept code for a draft research paper</title>
      <link>https://hjdskes.nl/projects/license-locations/</link>
      <pubDate>Tue, 21 Feb 2017 00:47:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/license-locations/</guid>
      <description>For the course IN4252 Web Science &amp;amp; Engineering I had to write a draft research paper, titled Open source software licenses: is there a correlation between developer location and software licenses?. In this paper I attempted to map the use of free and open source software licenses, in order to see whether a developer&amp;rsquo;s geographic location is a determinant of FOSS license choice. If you are interested in reading the draft (it was never required to go further, and never did), please reach out to me and I will send it to you.</description>
    </item>
    
    <item>
      <title>Spoofax Shell: my thesis project to create a REPL for Spoofax</title>
      <link>https://hjdskes.nl/projects/spoofax-shell/</link>
      <pubDate>Wed, 29 Jun 2016 17:23:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/spoofax-shell/</guid>
      <description>Spoofax Shell is my thesis project to create a REPL for the Spoofax Language Workbench. Read the accompanying report here.</description>
    </item>
    
    <item>
      <title>GTimeUtils: a stopwatch and a timer, bundled together as time utilities</title>
      <link>https://hjdskes.nl/projects/gtimeutils/</link>
      <pubDate>Sat, 22 Aug 2015 16:52:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/gtimeutils/</guid>
      <description></description>
    </item>
    
    <item>
      <title>DNAinator: visualizing and exploring DNA sequence graphs</title>
      <link>https://hjdskes.nl/projects/dnainator/</link>
      <pubDate>Thu, 25 Jun 2015 00:47:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/dnainator/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Arek Window Manager: a Mutter-based tiling window manager</title>
      <link>https://hjdskes.nl/projects/arek/</link>
      <pubDate>Sat, 21 Mar 2015 21:29:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/arek/</guid>
      <description>Arek Window Manager is a plugin to Mutter in an (ambitious) attempt to create a tiling window manager with eye-candy. Due to several limitations on Mutter&amp;rsquo;s side, a moving Wayland target and a lack of time on my side, this project is not actively maintained at the moment.</description>
    </item>
    
    <item>
      <title>Line Follower: an embedded software course project</title>
      <link>https://hjdskes.nl/projects/linefollower/</link>
      <pubDate>Sun, 25 Jan 2015 21:27:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/linefollower/</guid>
      <description>Line Follower is an embedded software course project to make a robot follow a line. An Android app is used to send images from the camera to a laptop via the network, where the laptop detects the line and sends commands to the robot via Bluetooth.</description>
    </item>
    
    <item>
      <title>2048: a software engineering course project</title>
      <link>https://hjdskes.nl/projects/2048/</link>
      <pubDate>Fri, 14 Nov 2014 14:27:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/2048/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ray Tracer: a computer graphics course project</title>
      <link>https://hjdskes.nl/projects/raytracer/</link>
      <pubDate>Thu, 26 Jun 2014 22:45:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/raytracer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ExcelPP: a freshmen OOP project to create a spreadsheet application</title>
      <link>https://hjdskes.nl/projects/excelpp/</link>
      <pubDate>Mon, 27 Jan 2014 10:37:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/excelpp/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Phosphorus: a wallpaper browser and setter in the spirit of Nitrogen</title>
      <link>https://hjdskes.nl/projects/phosphorus/</link>
      <pubDate>Fri, 15 Nov 2013 21:40:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/phosphorus/</guid>
      <description>Phosphorus is a wallpaper browser and setter in the spirit of Nitrogen. It can be considered an unofficial port of Nitrogen to GTK+ 3. Phosphorus is different, however, in that it is plugin-based. This allows it be agnostic as to how the wallpaper is actually applied &amp;ndash; each Desktop Environment has its own plugin with this functionality.</description>
    </item>
    
    <item>
      <title>Gcolor3: a color selection dialog written in GTK&#43; 3</title>
      <link>https://hjdskes.nl/projects/gcolor3/</link>
      <pubDate>Sun, 24 Feb 2013 17:31:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/gcolor3/</guid>
      <description>Ever wanted to know the value of that color on your screen? Gcolor3 enables you to pick the color from any pixel on your screen. It also offers a palette, so that you can easily mix and match a couple of colors together.
When you have found the perfect combination of colors, naturally you want to save them. Gcolor3 allows you to conveniently save and retrieve colors.</description>
    </item>
    
    <item>
      <title>Powersave: aggressive power saving on a Linux system</title>
      <link>https://hjdskes.nl/projects/powersave/</link>
      <pubDate>Sat, 30 Jun 2012 00:22:00 +0100</pubDate>
      
      <guid>https://hjdskes.nl/projects/powersave/</guid>
      <description>Powersave is a combination of scripts, udev rules, configuration files and systemd services to enable (aggressive) power saving on a Linux system. The configuration is tailered to my own laptop, but is easily adaptable to a new system.</description>
    </item>
    
  </channel>
</rss>