<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Jente Hidskes&#39; personal website</title>
    <link>https://hjdskes.github.io/blog/index.xml</link>
    <description>Recent content in Blogs on Jente Hidskes&#39; personal website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2016, 2017 Jente Hidskes</copyright>
    <lastBuildDate>Tue, 16 Aug 2016 22:07:21 +0200</lastBuildDate>
    <atom:link href="https://hjdskes.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Deploying Hugo-generated websites on personal GitHub Pages</title>
      <link>https://hjdskes.github.io/blog/deploying-hugo-on-personal-gh-pages/</link>
      <pubDate>Tue, 16 Aug 2016 22:07:21 +0200</pubDate>
      
      <guid>https://hjdskes.github.io/blog/deploying-hugo-on-personal-gh-pages/</guid>
      <description>

&lt;p&gt;&lt;em&gt;&lt;q&gt;&amp;ldquo;Hello, World!&amp;rdquo;&lt;/q&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As this is the first blog post on this website (and indeed, by myself), the
introduction had to be done. I&amp;rsquo;ll leave it at this, though. If you want to know
more about me, you can do that &lt;a href=&#34;https://hjdskes.github.io/about/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This website is created using the &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; static website
generator. You define the layout of your pages using regular HTML (combined with
Hugo&amp;rsquo;s &lt;a href=&#34;https://gohugo.io/templates/overview/&#34;&gt;templates&lt;/a&gt;), CSS and JavaScript
and you write your pages&amp;rsquo; contents using Markdown. Hugo takes these source files
and generates the HTML files for you. All you have to do afterwards is deploy
these files on your server.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://pages.github.com&#34;&gt;GitHub Pages&lt;/a&gt; is a service by GitHub allowing you to
create websites for yourself, your organization and your projects. These
websites are hosted directly in a GitHub repository under your control; simply
pushing changes to these repositories updates the website.&lt;/p&gt;

&lt;p&gt;This blog post explains how I combined the two: the website&amp;rsquo;s contents are
created using Hugo and are deployed through GitHub Pages.&lt;/p&gt;

&lt;h3 id=&#34;deploying-your-hugo-generated-website-on-github-pages&#34;&gt;Deploying your Hugo-generated website on GitHub Pages&lt;/h3&gt;

&lt;p&gt;There is a &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;good tutorial&lt;/a&gt; on
deploying your Hugo-generated website on GitHub Pages on the Hugo website. The
scenario described there, however, does not really fit my use-case.&lt;/p&gt;

&lt;p&gt;The tutorial applies to a GitHub Pages website belonging to a project. This
means that the website needs to be pushed into the &lt;code&gt;gh-pages&lt;/code&gt; branch under
said project&amp;rsquo;s GitHub repository.&lt;/p&gt;

&lt;p&gt;In my case, I&amp;rsquo;m using Hugo to generate a personal website. This means that I
have a &lt;code&gt;$USERNAME.github.io&lt;/code&gt; repository, and consequently that my website&amp;rsquo;s
contents need to be pushed into that repository&amp;rsquo;s &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;The above mentioned tutorial does have a small section on hosting the website on
personal GitHub Pages, but I find their solution to use two repositories (one
for the sources and another for the generated website) to be sub-par. A Google
search led me to
&lt;a href=&#34;http://life.beyondrails.com/blog/2014/12/14/setting-up-and-automating-my-hugo-blog-deployment-to-github-pages/&#34;&gt;this&lt;/a&gt;
blog post where the author struggled with the same issue. What follows
is my solution, combining both tutorials.&lt;/p&gt;

&lt;p&gt;As mentioned, I have a &lt;code&gt;$USERNAME.github.io&lt;/code&gt; repository. My website&amp;rsquo;s content
should be deployed into the &lt;code&gt;master&lt;/code&gt; branch, starting with a valid &lt;code&gt;index.html&lt;/code&gt;
in this branch&amp;rsquo;s root. Not wanting to mix source- and generated files, I
intended to keep Hugo&amp;rsquo;s default setting to generate the website into a separate
directory called &lt;code&gt;public/&lt;/code&gt;. As you can see, these two options are at odds.&lt;/p&gt;

&lt;p&gt;I therefore adopted the &lt;code&gt;git subtree&lt;/code&gt; approach as initially suggested in the
Hugo tutorial: have a &amp;ldquo;source&amp;rdquo; branch for the source files, which contains a
&lt;code&gt;public/&lt;/code&gt; folder mirroring the root of the &lt;code&gt;master&lt;/code&gt; branch containing only the
generated website. The workflow, then, would be something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make a change to the website;&lt;/li&gt;
&lt;li&gt;Commit those changes;&lt;/li&gt;
&lt;li&gt;Use Hugo to generate the new website;&lt;/li&gt;
&lt;li&gt;Push the new &lt;code&gt;public/&lt;/code&gt; folder to the &amp;ldquo;source&amp;rdquo; branch;&lt;/li&gt;
&lt;li&gt;Push the contents of the new  &lt;code&gt;public/&lt;/code&gt; folder to the &lt;code&gt;master&lt;/code&gt; branch using
&lt;code&gt;git subtree&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This would allow me to have one branch for my source files, and to use the
&lt;code&gt;master&lt;/code&gt; branch for the generated website only, resolving my issue. Steps two
to five can be automated, although personally I prefer to do step two myself.
However, for steps three to five I have written a small script, &lt;code&gt;deploy.sh&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/usr/bin/env bash

# This script allows you to easily and quickly generate and deploy your website
# using Hugo to your personal GitHub Pages repository. This script requires a
# certain configuration, run the `setup.sh` script to configure this. See
# https://hjdskes.github.io/blog/deploying-hugo-on-personal-github-pages/index.html
# for more information.

# Set the English locale for the `date` command.
export LC_TIME=en_US.UTF-8

# GitHub username.
USERNAME=hjdskes
# Name of the branch containing the Hugo source files.
SOURCE=hugo
# The commit message.
MESSAGE=&amp;quot;Site rebuild $(date)&amp;quot;

msg() {
    printf &amp;quot;\033[1;32m :: %s\n\033[0m&amp;quot; &amp;quot;$1&amp;quot;
}

msg &amp;quot;Pulling down the \`master\` branch into \`public\` to help avoid merge conflicts&amp;quot;
git subtree pull --prefix=public \
	git@github.com:$USERNAME/$USERNAME.github.io.git master -m &amp;quot;Merge master&amp;quot;

msg &amp;quot;Building the website&amp;quot;
hugo

msg &amp;quot;Pushing the updated \`public\` folder to the \`$SOURCE\` branch&amp;quot;
git add public
git commit -m &amp;quot;$MESSAGE&amp;quot;
git push origin &amp;quot;$SOURCE&amp;quot;

msg &amp;quot;Pushing the updated \`public\` folder to the \`master\` branch&amp;quot;
git subtree push --prefix=public \
	git@github.com:$USERNAME/$USERNAME.github.io.git master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have written a second script to take care of the setup, in case I ever need
to repeat the steps for another website. This script needs to be run only once;
afterwards, &lt;code&gt;deploy.sh&lt;/code&gt; does all the work. The script will create an empty,
orphaned &lt;code&gt;master&lt;/code&gt; branch, which from then on is not supposed to be touched
manually. To start with a clean history, I have opted to delete the existing
&lt;code&gt;master&lt;/code&gt; branch (both local and remote), if any. Note that GitHub does not allow
you to delete the default branch, which, by default (pun intended) is the
&lt;code&gt;master&lt;/code&gt; branch. Since I never touch the &lt;code&gt;master&lt;/code&gt; branch, I changed the default
branch to the &amp;ldquo;source&amp;rdquo; branch, allowing me to delete the &lt;code&gt;master&lt;/code&gt; branch. To
change the default branch, open your GitHub repository and go to Settings →
Branches.&lt;/p&gt;

&lt;div  class=&#34;warning&#34; &gt;
  &lt;p&gt;This script will delete the &lt;code&gt;public/&lt;/code&gt; directory.
Make sure any files you want to keep are backed up!&lt;/p&gt;

&lt;/div&gt;



&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/usr/bin/env bash

# This script does the required work to set up your personal GitHub Pages
# repository for deployment using Hugo. Run this script only once -- when the
# setup has been done, run the `deploy.sh` script to deploy changes and update
# your website. See
# https://hjdskes.github.io/blog/deploying-hugo-on-personal-github-pages/index.html
# for more information.

# GitHub username
USERNAME=hjdskes
# Name of the branch containing the Hugo source files.
SOURCE=hugo

msg() {
    printf &amp;quot;\033[1;32m :: %s\n\033[0m&amp;quot; &amp;quot;$1&amp;quot;
}

msg &amp;quot;Deleting the \`master\` branch&amp;quot;
git branch -D master
git push origin --delete master

msg &amp;quot;Creating an empty, orphaned \`master\` branch&amp;quot;
git checkout --orphan master
git rm --cached $(git ls-files)

msg &amp;quot;Grabbing one file from the \`$SOURCE\` branch so that a commit can be made&amp;quot;
git checkout &amp;quot;$SOURCE&amp;quot; README.md
git commit -m &amp;quot;Initial commit on master branch&amp;quot;
git push origin master

msg &amp;quot;Returning to the \`$SOURCE\` branch&amp;quot;
git checkout -f &amp;quot;$SOURCE&amp;quot;

msg &amp;quot;Removing the \`public\` folder to make room for the \`master\` subtree&amp;quot;
rm -rf public
git add -u
git commit -m &amp;quot;Remove stale public folder&amp;quot;

msg &amp;quot;Adding the new \`master\` branch as a subtree&amp;quot;
git subtree add --prefix=public \
	git@github.com:$USERNAME/$USERNAME.github.io.git master --squash

msg &amp;quot;Pulling down the just committed file to help avoid merge conflicts&amp;quot;
git subtree pull --prefix=public \
	git@github.com:$USERNAME/$USERNAME.github.io.git master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can find the structure and setup in use in &lt;a href=&#34;https://github.com/Hjdskes/hjdskes.github.io&#34;&gt;this website&amp;rsquo;s
repository&lt;/a&gt;. If any of the above is
unclear, feel free to send me an &lt;a href=&#34;mailto:hjdskes@gmail.com&#34;&gt;email&lt;/a&gt; and I&amp;rsquo;ll try
my best to update this post.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>